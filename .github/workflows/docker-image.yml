# Copied from:
# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

on:
  push:
    branches: ['dev']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-domibus-ws-sender

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup java 8
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: 'maven'

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Cache local Maven repository
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.m2/repository
      #     key: ${{ runner.os }}-maven2-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-maven2-

      - name: Build mvn Delis
#        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: mvn --batch-mode install -DskipTests=true

      - name: Build mvn Domibus Ws Sender
#        if: steps.cache-primes.outputs.cache-hit != 'true'
        run: mvn --batch-mode package -DskipTests=true --file ./delis-domibus-ws-sender/pom.xml

      # - name: Prepare docker folder
      #   run: rm -r -f ./docker && mkdir ./docker && cp ./delis-docker/delis-web/docker/Dockerfile ./docker && rm -r -f ./docker/app

      # - name: Copy mvn jar and unpack
      #   run: unzip ./delis-domibus-ws-sender/target/delis-domibus-ws-sender-0.0.1.jar -d ./docker/app

      # - name: delis-domibus-ws-sender - build and push image
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: ./docker
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
